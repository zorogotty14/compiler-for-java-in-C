Terminals unused in grammar

   CONTINUE
   NEW
   LITERAL
   PACKAGE
   THIS


State 62 conflicts: 13 shift/reduce, 1 reduce/reduce
State 72 conflicts: 13 shift/reduce, 1 reduce/reduce
State 75 conflicts: 13 shift/reduce, 1 reduce/reduce
State 77 conflicts: 11 shift/reduce, 14 reduce/reduce


Grammar

    0 $accept: start1 $end

    1 start1: import start1
    2       | class start1
    3       | method start1
    4       | declaration start1
    5       | %empty

    6 import: IMPORT IDENTIFIER '.' '*'
    7       | IMPORT IDENTIFIER '.' IDENTIFIER '.' '*'
    8       | IMPORT IDENTIFIER '.' IDENTIFIER '.' IDENTIFIER

    9 class: modifiers CLASS IDENTIFIER '{' classbody '}'
   10      | CLASS IDENTIFIER '{' classbody '}'

   11 modifiers: modifier
   12          | modifier modifiers

   13 modifier: PUBLIC
   14         | STATIC

   15 classbody: declaration classbody
   16          | method classbody
   17          | %empty

   18 method: modifiers type IDENTIFIER '(' arglist ')' '{' methodbody '}'

   19 arglist: arg ',' arglist
   20        | arg

   21 arg: type IDENTIFIER
   22    | IDENTIFIER OP_DIM IDENTIFIER
   23    | type OP_DIM IDENTIFIER

   24 methodbody: method methodbody
   25           | compoundst methodbody
   26           | %empty

   27 type: VOID
   28     | INT
   29     | FLOAT
   30     | CHAR

   31 compoundst: statement_list

   32 statement_list: statement
   33               | statement statement_list
   34               | %empty

   35 statement: declaration
   36          | label
   37          | assignment
   38          | while
   39          | switch
   40          | RETURN rel_exp ';'
   41          | BREAK ';'

   42 declaration: type id_list ';'

   43 id_list: IDENTIFIER ',' id_list
   44        | IDENTIFIER

   45 assignment: IDENTIFIER '=' rel_exp ';'
   46           | type IDENTIFIER '=' rel_exp ';'

   47 while: WHILE '(' rel_exp ')' '{' compoundst '}'

   48 switch: SWITCH '(' rel_exp ')' '{' compoundst '}'

   49 label: CASE rel_exp ':'
   50      | DEFAULT ':'

   51 rel_exp: rel_exp RELOP add_expression
   52        | add_expression

   53 add_expression: add_expression '+' mul_expression
   54               | add_expression '-' mul_expression
   55               | mul_expression

   56 mul_expression: mul_expression '*' cast_exp
   57               | mul_expression '/' cast_exp
   58               | cast_exp

   59 cast_exp: unary_exp
   60         | '(' type ')' cast_exp

   61 unary_exp: exp
   62          | UNOP exp
   63          | exp UNOP
   64          | unary_op exp

   65 unary_op: '-'
   66         | '+'
   67         | '&'
   68         | '!'

   69 exp: base
   70    | exp '(' ')'
   71    | exp '(' id_list ')'

   72 base: IDENTIFIER
   73     | NUM
   74     | FNUM
   75     | STRING
   76     | '(' rel_exp ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 68
'&' (38) 67
'(' (40) 18 47 48 60 70 71 76
')' (41) 18 47 48 60 70 71 76
'*' (42) 6 7 56
'+' (43) 53 66
',' (44) 19 43
'-' (45) 54 65
'.' (46) 6 7 8
'/' (47) 57
':' (58) 49 50
';' (59) 40 41 42 45 46
'=' (61) 45 46
'{' (123) 9 10 18 47 48
'}' (125) 9 10 18 47 48
error (256)
CASE (258) 49
CHAR (259) 30
CLASS (260) 9 10
CONTINUE (261)
BREAK (262) 41
DEFAULT (263) 50
FLOAT (264) 29
STRING (265) 75
NUM (266) 73
FNUM (267) 74
IMPORT (268) 6 7 8
INT (269) 28
IDENTIFIER (270) 6 7 8 9 10 18 21 22 23 43 44 45 46 72
NEW (271)
LITERAL (272)
OP_DIM (273) 22 23
PACKAGE (274)
PUBLIC (275) 13
RETURN (276) 40
STATIC (277) 14
SWITCH (278) 48
THIS (279)
VOID (280) 27
UNOP (281) 62 63
WHILE (282) 47
RELOP (283) 51


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
start1 (45)
    on left: 1 2 3 4 5, on right: 0 1 2 3 4
import (46)
    on left: 6 7 8, on right: 1
class (47)
    on left: 9 10, on right: 2
modifiers (48)
    on left: 11 12, on right: 9 12 18
modifier (49)
    on left: 13 14, on right: 11 12
classbody (50)
    on left: 15 16 17, on right: 9 10 15 16
method (51)
    on left: 18, on right: 3 16 24
arglist (52)
    on left: 19 20, on right: 18 19
arg (53)
    on left: 21 22 23, on right: 19 20
methodbody (54)
    on left: 24 25 26, on right: 18 24 25
type (55)
    on left: 27 28 29 30, on right: 18 21 23 42 46 60
compoundst (56)
    on left: 31, on right: 25 47 48
statement_list (57)
    on left: 32 33 34, on right: 31 33
statement (58)
    on left: 35 36 37 38 39 40 41, on right: 32 33
declaration (59)
    on left: 42, on right: 4 15 35
id_list (60)
    on left: 43 44, on right: 42 43 71
assignment (61)
    on left: 45 46, on right: 37
while (62)
    on left: 47, on right: 38
switch (63)
    on left: 48, on right: 39
label (64)
    on left: 49 50, on right: 36
rel_exp (65)
    on left: 51 52, on right: 40 45 46 47 48 49 51 76
add_expression (66)
    on left: 53 54 55, on right: 51 52 53 54
mul_expression (67)
    on left: 56 57 58, on right: 53 54 55 56 57
cast_exp (68)
    on left: 59 60, on right: 56 57 58 60
unary_exp (69)
    on left: 61 62 63 64, on right: 59
unary_op (70)
    on left: 65 66 67 68, on right: 64
exp (71)
    on left: 69 70 71, on right: 61 62 63 64 70 71
base (72)
    on left: 72 73 74 75 76, on right: 69


State 0

    0 $accept: . start1 $end

    CHAR    shift, and go to state 1
    CLASS   shift, and go to state 2
    FLOAT   shift, and go to state 3
    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    PUBLIC  shift, and go to state 6
    STATIC  shift, and go to state 7
    VOID    shift, and go to state 8

    $default  reduce using rule 5 (start1)

    start1       go to state 9
    import       go to state 10
    class        go to state 11
    modifiers    go to state 12
    modifier     go to state 13
    method       go to state 14
    type         go to state 15
    declaration  go to state 16


State 1

   30 type: CHAR .

    $default  reduce using rule 30 (type)


State 2

   10 class: CLASS . IDENTIFIER '{' classbody '}'

    IDENTIFIER  shift, and go to state 17


State 3

   29 type: FLOAT .

    $default  reduce using rule 29 (type)


State 4

    6 import: IMPORT . IDENTIFIER '.' '*'
    7       | IMPORT . IDENTIFIER '.' IDENTIFIER '.' '*'
    8       | IMPORT . IDENTIFIER '.' IDENTIFIER '.' IDENTIFIER

    IDENTIFIER  shift, and go to state 18


State 5

   28 type: INT .

    $default  reduce using rule 28 (type)


State 6

   13 modifier: PUBLIC .

    $default  reduce using rule 13 (modifier)


State 7

   14 modifier: STATIC .

    $default  reduce using rule 14 (modifier)


State 8

   27 type: VOID .

    $default  reduce using rule 27 (type)


State 9

    0 $accept: start1 . $end

    $end  shift, and go to state 19


State 10

    1 start1: import . start1

    CHAR    shift, and go to state 1
    CLASS   shift, and go to state 2
    FLOAT   shift, and go to state 3
    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    PUBLIC  shift, and go to state 6
    STATIC  shift, and go to state 7
    VOID    shift, and go to state 8

    $default  reduce using rule 5 (start1)

    start1       go to state 20
    import       go to state 10
    class        go to state 11
    modifiers    go to state 12
    modifier     go to state 13
    method       go to state 14
    type         go to state 15
    declaration  go to state 16


State 11

    2 start1: class . start1

    CHAR    shift, and go to state 1
    CLASS   shift, and go to state 2
    FLOAT   shift, and go to state 3
    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    PUBLIC  shift, and go to state 6
    STATIC  shift, and go to state 7
    VOID    shift, and go to state 8

    $default  reduce using rule 5 (start1)

    start1       go to state 21
    import       go to state 10
    class        go to state 11
    modifiers    go to state 12
    modifier     go to state 13
    method       go to state 14
    type         go to state 15
    declaration  go to state 16


State 12

    9 class: modifiers . CLASS IDENTIFIER '{' classbody '}'
   18 method: modifiers . type IDENTIFIER '(' arglist ')' '{' methodbody '}'

    CHAR   shift, and go to state 1
    CLASS  shift, and go to state 22
    FLOAT  shift, and go to state 3
    INT    shift, and go to state 5
    VOID   shift, and go to state 8

    type  go to state 23


State 13

   11 modifiers: modifier .
   12          | modifier . modifiers

    PUBLIC  shift, and go to state 6
    STATIC  shift, and go to state 7

    $default  reduce using rule 11 (modifiers)

    modifiers  go to state 24
    modifier   go to state 13


State 14

    3 start1: method . start1

    CHAR    shift, and go to state 1
    CLASS   shift, and go to state 2
    FLOAT   shift, and go to state 3
    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    PUBLIC  shift, and go to state 6
    STATIC  shift, and go to state 7
    VOID    shift, and go to state 8

    $default  reduce using rule 5 (start1)

    start1       go to state 25
    import       go to state 10
    class        go to state 11
    modifiers    go to state 12
    modifier     go to state 13
    method       go to state 14
    type         go to state 15
    declaration  go to state 16


State 15

   42 declaration: type . id_list ';'

    IDENTIFIER  shift, and go to state 26

    id_list  go to state 27


State 16

    4 start1: declaration . start1

    CHAR    shift, and go to state 1
    CLASS   shift, and go to state 2
    FLOAT   shift, and go to state 3
    IMPORT  shift, and go to state 4
    INT     shift, and go to state 5
    PUBLIC  shift, and go to state 6
    STATIC  shift, and go to state 7
    VOID    shift, and go to state 8

    $default  reduce using rule 5 (start1)

    start1       go to state 28
    import       go to state 10
    class        go to state 11
    modifiers    go to state 12
    modifier     go to state 13
    method       go to state 14
    type         go to state 15
    declaration  go to state 16


State 17

   10 class: CLASS IDENTIFIER . '{' classbody '}'

    '{'  shift, and go to state 29


State 18

    6 import: IMPORT IDENTIFIER . '.' '*'
    7       | IMPORT IDENTIFIER . '.' IDENTIFIER '.' '*'
    8       | IMPORT IDENTIFIER . '.' IDENTIFIER '.' IDENTIFIER

    '.'  shift, and go to state 30


State 19

    0 $accept: start1 $end .

    $default  accept


State 20

    1 start1: import start1 .

    $default  reduce using rule 1 (start1)


State 21

    2 start1: class start1 .

    $default  reduce using rule 2 (start1)


State 22

    9 class: modifiers CLASS . IDENTIFIER '{' classbody '}'

    IDENTIFIER  shift, and go to state 31


State 23

   18 method: modifiers type . IDENTIFIER '(' arglist ')' '{' methodbody '}'

    IDENTIFIER  shift, and go to state 32


State 24

   12 modifiers: modifier modifiers .

    $default  reduce using rule 12 (modifiers)


State 25

    3 start1: method start1 .

    $default  reduce using rule 3 (start1)


State 26

   43 id_list: IDENTIFIER . ',' id_list
   44        | IDENTIFIER .

    ','  shift, and go to state 33

    $default  reduce using rule 44 (id_list)


State 27

   42 declaration: type id_list . ';'

    ';'  shift, and go to state 34


State 28

    4 start1: declaration start1 .

    $default  reduce using rule 4 (start1)


State 29

   10 class: CLASS IDENTIFIER '{' . classbody '}'

    CHAR    shift, and go to state 1
    FLOAT   shift, and go to state 3
    INT     shift, and go to state 5
    PUBLIC  shift, and go to state 6
    STATIC  shift, and go to state 7
    VOID    shift, and go to state 8

    $default  reduce using rule 17 (classbody)

    modifiers    go to state 35
    modifier     go to state 13
    classbody    go to state 36
    method       go to state 37
    type         go to state 15
    declaration  go to state 38


State 30

    6 import: IMPORT IDENTIFIER '.' . '*'
    7       | IMPORT IDENTIFIER '.' . IDENTIFIER '.' '*'
    8       | IMPORT IDENTIFIER '.' . IDENTIFIER '.' IDENTIFIER

    IDENTIFIER  shift, and go to state 39
    '*'         shift, and go to state 40


State 31

    9 class: modifiers CLASS IDENTIFIER . '{' classbody '}'

    '{'  shift, and go to state 41


State 32

   18 method: modifiers type IDENTIFIER . '(' arglist ')' '{' methodbody '}'

    '('  shift, and go to state 42


State 33

   43 id_list: IDENTIFIER ',' . id_list

    IDENTIFIER  shift, and go to state 26

    id_list  go to state 43


State 34

   42 declaration: type id_list ';' .

    $default  reduce using rule 42 (declaration)


State 35

   18 method: modifiers . type IDENTIFIER '(' arglist ')' '{' methodbody '}'

    CHAR   shift, and go to state 1
    FLOAT  shift, and go to state 3
    INT    shift, and go to state 5
    VOID   shift, and go to state 8

    type  go to state 23


State 36

   10 class: CLASS IDENTIFIER '{' classbody . '}'

    '}'  shift, and go to state 44


State 37

   16 classbody: method . classbody

    CHAR    shift, and go to state 1
    FLOAT   shift, and go to state 3
    INT     shift, and go to state 5
    PUBLIC  shift, and go to state 6
    STATIC  shift, and go to state 7
    VOID    shift, and go to state 8

    $default  reduce using rule 17 (classbody)

    modifiers    go to state 35
    modifier     go to state 13
    classbody    go to state 45
    method       go to state 37
    type         go to state 15
    declaration  go to state 38


State 38

   15 classbody: declaration . classbody

    CHAR    shift, and go to state 1
    FLOAT   shift, and go to state 3
    INT     shift, and go to state 5
    PUBLIC  shift, and go to state 6
    STATIC  shift, and go to state 7
    VOID    shift, and go to state 8

    $default  reduce using rule 17 (classbody)

    modifiers    go to state 35
    modifier     go to state 13
    classbody    go to state 46
    method       go to state 37
    type         go to state 15
    declaration  go to state 38


State 39

    7 import: IMPORT IDENTIFIER '.' IDENTIFIER . '.' '*'
    8       | IMPORT IDENTIFIER '.' IDENTIFIER . '.' IDENTIFIER

    '.'  shift, and go to state 47


State 40

    6 import: IMPORT IDENTIFIER '.' '*' .

    $default  reduce using rule 6 (import)


State 41

    9 class: modifiers CLASS IDENTIFIER '{' . classbody '}'

    CHAR    shift, and go to state 1
    FLOAT   shift, and go to state 3
    INT     shift, and go to state 5
    PUBLIC  shift, and go to state 6
    STATIC  shift, and go to state 7
    VOID    shift, and go to state 8

    $default  reduce using rule 17 (classbody)

    modifiers    go to state 35
    modifier     go to state 13
    classbody    go to state 48
    method       go to state 37
    type         go to state 15
    declaration  go to state 38


State 42

   18 method: modifiers type IDENTIFIER '(' . arglist ')' '{' methodbody '}'

    CHAR        shift, and go to state 1
    FLOAT       shift, and go to state 3
    INT         shift, and go to state 5
    IDENTIFIER  shift, and go to state 49
    VOID        shift, and go to state 8

    arglist  go to state 50
    arg      go to state 51
    type     go to state 52


State 43

   43 id_list: IDENTIFIER ',' id_list .

    $default  reduce using rule 43 (id_list)


State 44

   10 class: CLASS IDENTIFIER '{' classbody '}' .

    $default  reduce using rule 10 (class)


State 45

   16 classbody: method classbody .

    $default  reduce using rule 16 (classbody)


State 46

   15 classbody: declaration classbody .

    $default  reduce using rule 15 (classbody)


State 47

    7 import: IMPORT IDENTIFIER '.' IDENTIFIER '.' . '*'
    8       | IMPORT IDENTIFIER '.' IDENTIFIER '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 53
    '*'         shift, and go to state 54


State 48

    9 class: modifiers CLASS IDENTIFIER '{' classbody . '}'

    '}'  shift, and go to state 55


State 49

   22 arg: IDENTIFIER . OP_DIM IDENTIFIER

    OP_DIM  shift, and go to state 56


State 50

   18 method: modifiers type IDENTIFIER '(' arglist . ')' '{' methodbody '}'

    ')'  shift, and go to state 57


State 51

   19 arglist: arg . ',' arglist
   20        | arg .

    ','  shift, and go to state 58

    $default  reduce using rule 20 (arglist)


State 52

   21 arg: type . IDENTIFIER
   23    | type . OP_DIM IDENTIFIER

    IDENTIFIER  shift, and go to state 59
    OP_DIM      shift, and go to state 60


State 53

    8 import: IMPORT IDENTIFIER '.' IDENTIFIER '.' IDENTIFIER .

    $default  reduce using rule 8 (import)


State 54

    7 import: IMPORT IDENTIFIER '.' IDENTIFIER '.' '*' .

    $default  reduce using rule 7 (import)


State 55

    9 class: modifiers CLASS IDENTIFIER '{' classbody '}' .

    $default  reduce using rule 9 (class)


State 56

   22 arg: IDENTIFIER OP_DIM . IDENTIFIER

    IDENTIFIER  shift, and go to state 61


State 57

   18 method: modifiers type IDENTIFIER '(' arglist ')' . '{' methodbody '}'

    '{'  shift, and go to state 62


State 58

   19 arglist: arg ',' . arglist

    CHAR        shift, and go to state 1
    FLOAT       shift, and go to state 3
    INT         shift, and go to state 5
    IDENTIFIER  shift, and go to state 49
    VOID        shift, and go to state 8

    arglist  go to state 63
    arg      go to state 51
    type     go to state 52


State 59

   21 arg: type IDENTIFIER .

    $default  reduce using rule 21 (arg)


State 60

   23 arg: type OP_DIM . IDENTIFIER

    IDENTIFIER  shift, and go to state 64


State 61

   22 arg: IDENTIFIER OP_DIM IDENTIFIER .

    $default  reduce using rule 22 (arg)


State 62

   18 method: modifiers type IDENTIFIER '(' arglist ')' '{' . methodbody '}'

    CASE        shift, and go to state 65
    CHAR        shift, and go to state 1
    BREAK       shift, and go to state 66
    DEFAULT     shift, and go to state 67
    FLOAT       shift, and go to state 3
    INT         shift, and go to state 5
    IDENTIFIER  shift, and go to state 68
    PUBLIC      shift, and go to state 6
    RETURN      shift, and go to state 69
    STATIC      shift, and go to state 7
    SWITCH      shift, and go to state 70
    VOID        shift, and go to state 8
    WHILE       shift, and go to state 71

    CASE        [reduce using rule 34 (statement_list)]
    CHAR        [reduce using rule 34 (statement_list)]
    BREAK       [reduce using rule 34 (statement_list)]
    DEFAULT     [reduce using rule 34 (statement_list)]
    FLOAT       [reduce using rule 34 (statement_list)]
    INT         [reduce using rule 34 (statement_list)]
    IDENTIFIER  [reduce using rule 34 (statement_list)]
    PUBLIC      [reduce using rule 34 (statement_list)]
    RETURN      [reduce using rule 34 (statement_list)]
    STATIC      [reduce using rule 34 (statement_list)]
    SWITCH      [reduce using rule 34 (statement_list)]
    VOID        [reduce using rule 34 (statement_list)]
    WHILE       [reduce using rule 34 (statement_list)]
    '}'         reduce using rule 26 (methodbody)
    '}'         [reduce using rule 34 (statement_list)]
    $default    reduce using rule 26 (methodbody)

    modifiers       go to state 35
    modifier        go to state 13
    method          go to state 72
    methodbody      go to state 73
    type            go to state 74
    compoundst      go to state 75
    statement_list  go to state 76
    statement       go to state 77
    declaration     go to state 78
    assignment      go to state 79
    while           go to state 80
    switch          go to state 81
    label           go to state 82


State 63

   19 arglist: arg ',' arglist .

    $default  reduce using rule 19 (arglist)


State 64

   23 arg: type OP_DIM IDENTIFIER .

    $default  reduce using rule 23 (arg)


State 65

   49 label: CASE . rel_exp ':'

    STRING      shift, and go to state 83
    NUM         shift, and go to state 84
    FNUM        shift, and go to state 85
    IDENTIFIER  shift, and go to state 86
    UNOP        shift, and go to state 87
    '+'         shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '&'         shift, and go to state 91
    '!'         shift, and go to state 92

    rel_exp         go to state 93
    add_expression  go to state 94
    mul_expression  go to state 95
    cast_exp        go to state 96
    unary_exp       go to state 97
    unary_op        go to state 98
    exp             go to state 99
    base            go to state 100


State 66

   41 statement: BREAK . ';'

    ';'  shift, and go to state 101


State 67

   50 label: DEFAULT . ':'

    ':'  shift, and go to state 102


State 68

   45 assignment: IDENTIFIER . '=' rel_exp ';'

    '='  shift, and go to state 103


State 69

   40 statement: RETURN . rel_exp ';'

    STRING      shift, and go to state 83
    NUM         shift, and go to state 84
    FNUM        shift, and go to state 85
    IDENTIFIER  shift, and go to state 86
    UNOP        shift, and go to state 87
    '+'         shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '&'         shift, and go to state 91
    '!'         shift, and go to state 92

    rel_exp         go to state 104
    add_expression  go to state 94
    mul_expression  go to state 95
    cast_exp        go to state 96
    unary_exp       go to state 97
    unary_op        go to state 98
    exp             go to state 99
    base            go to state 100


State 70

   48 switch: SWITCH . '(' rel_exp ')' '{' compoundst '}'

    '('  shift, and go to state 105


State 71

   47 while: WHILE . '(' rel_exp ')' '{' compoundst '}'

    '('  shift, and go to state 106


State 72

   24 methodbody: method . methodbody

    CASE        shift, and go to state 65
    CHAR        shift, and go to state 1
    BREAK       shift, and go to state 66
    DEFAULT     shift, and go to state 67
    FLOAT       shift, and go to state 3
    INT         shift, and go to state 5
    IDENTIFIER  shift, and go to state 68
    PUBLIC      shift, and go to state 6
    RETURN      shift, and go to state 69
    STATIC      shift, and go to state 7
    SWITCH      shift, and go to state 70
    VOID        shift, and go to state 8
    WHILE       shift, and go to state 71

    CASE        [reduce using rule 34 (statement_list)]
    CHAR        [reduce using rule 34 (statement_list)]
    BREAK       [reduce using rule 34 (statement_list)]
    DEFAULT     [reduce using rule 34 (statement_list)]
    FLOAT       [reduce using rule 34 (statement_list)]
    INT         [reduce using rule 34 (statement_list)]
    IDENTIFIER  [reduce using rule 34 (statement_list)]
    PUBLIC      [reduce using rule 34 (statement_list)]
    RETURN      [reduce using rule 34 (statement_list)]
    STATIC      [reduce using rule 34 (statement_list)]
    SWITCH      [reduce using rule 34 (statement_list)]
    VOID        [reduce using rule 34 (statement_list)]
    WHILE       [reduce using rule 34 (statement_list)]
    '}'         reduce using rule 26 (methodbody)
    '}'         [reduce using rule 34 (statement_list)]
    $default    reduce using rule 26 (methodbody)

    modifiers       go to state 35
    modifier        go to state 13
    method          go to state 72
    methodbody      go to state 107
    type            go to state 74
    compoundst      go to state 75
    statement_list  go to state 76
    statement       go to state 77
    declaration     go to state 78
    assignment      go to state 79
    while           go to state 80
    switch          go to state 81
    label           go to state 82


State 73

   18 method: modifiers type IDENTIFIER '(' arglist ')' '{' methodbody . '}'

    '}'  shift, and go to state 108


State 74

   42 declaration: type . id_list ';'
   46 assignment: type . IDENTIFIER '=' rel_exp ';'

    IDENTIFIER  shift, and go to state 109

    id_list  go to state 27


State 75

   25 methodbody: compoundst . methodbody

    CASE        shift, and go to state 65
    CHAR        shift, and go to state 1
    BREAK       shift, and go to state 66
    DEFAULT     shift, and go to state 67
    FLOAT       shift, and go to state 3
    INT         shift, and go to state 5
    IDENTIFIER  shift, and go to state 68
    PUBLIC      shift, and go to state 6
    RETURN      shift, and go to state 69
    STATIC      shift, and go to state 7
    SWITCH      shift, and go to state 70
    VOID        shift, and go to state 8
    WHILE       shift, and go to state 71

    CASE        [reduce using rule 34 (statement_list)]
    CHAR        [reduce using rule 34 (statement_list)]
    BREAK       [reduce using rule 34 (statement_list)]
    DEFAULT     [reduce using rule 34 (statement_list)]
    FLOAT       [reduce using rule 34 (statement_list)]
    INT         [reduce using rule 34 (statement_list)]
    IDENTIFIER  [reduce using rule 34 (statement_list)]
    PUBLIC      [reduce using rule 34 (statement_list)]
    RETURN      [reduce using rule 34 (statement_list)]
    STATIC      [reduce using rule 34 (statement_list)]
    SWITCH      [reduce using rule 34 (statement_list)]
    VOID        [reduce using rule 34 (statement_list)]
    WHILE       [reduce using rule 34 (statement_list)]
    '}'         reduce using rule 26 (methodbody)
    '}'         [reduce using rule 34 (statement_list)]
    $default    reduce using rule 26 (methodbody)

    modifiers       go to state 35
    modifier        go to state 13
    method          go to state 72
    methodbody      go to state 110
    type            go to state 74
    compoundst      go to state 75
    statement_list  go to state 76
    statement       go to state 77
    declaration     go to state 78
    assignment      go to state 79
    while           go to state 80
    switch          go to state 81
    label           go to state 82


State 76

   31 compoundst: statement_list .

    $default  reduce using rule 31 (compoundst)


State 77

   32 statement_list: statement .
   33               | statement . statement_list

    CASE        shift, and go to state 65
    CHAR        shift, and go to state 1
    BREAK       shift, and go to state 66
    DEFAULT     shift, and go to state 67
    FLOAT       shift, and go to state 3
    INT         shift, and go to state 5
    IDENTIFIER  shift, and go to state 68
    RETURN      shift, and go to state 69
    SWITCH      shift, and go to state 70
    VOID        shift, and go to state 8
    WHILE       shift, and go to state 71

    CASE        [reduce using rule 32 (statement_list)]
    CASE        [reduce using rule 34 (statement_list)]
    CHAR        [reduce using rule 32 (statement_list)]
    CHAR        [reduce using rule 34 (statement_list)]
    BREAK       [reduce using rule 32 (statement_list)]
    BREAK       [reduce using rule 34 (statement_list)]
    DEFAULT     [reduce using rule 32 (statement_list)]
    DEFAULT     [reduce using rule 34 (statement_list)]
    FLOAT       [reduce using rule 32 (statement_list)]
    FLOAT       [reduce using rule 34 (statement_list)]
    INT         [reduce using rule 32 (statement_list)]
    INT         [reduce using rule 34 (statement_list)]
    IDENTIFIER  [reduce using rule 32 (statement_list)]
    IDENTIFIER  [reduce using rule 34 (statement_list)]
    PUBLIC      reduce using rule 32 (statement_list)
    PUBLIC      [reduce using rule 34 (statement_list)]
    RETURN      [reduce using rule 32 (statement_list)]
    RETURN      [reduce using rule 34 (statement_list)]
    STATIC      reduce using rule 32 (statement_list)
    STATIC      [reduce using rule 34 (statement_list)]
    SWITCH      [reduce using rule 32 (statement_list)]
    SWITCH      [reduce using rule 34 (statement_list)]
    VOID        [reduce using rule 32 (statement_list)]
    VOID        [reduce using rule 34 (statement_list)]
    WHILE       [reduce using rule 32 (statement_list)]
    WHILE       [reduce using rule 34 (statement_list)]
    '}'         reduce using rule 32 (statement_list)
    '}'         [reduce using rule 34 (statement_list)]
    $default    reduce using rule 32 (statement_list)

    type            go to state 74
    statement_list  go to state 111
    statement       go to state 77
    declaration     go to state 78
    assignment      go to state 79
    while           go to state 80
    switch          go to state 81
    label           go to state 82


State 78

   35 statement: declaration .

    $default  reduce using rule 35 (statement)


State 79

   37 statement: assignment .

    $default  reduce using rule 37 (statement)


State 80

   38 statement: while .

    $default  reduce using rule 38 (statement)


State 81

   39 statement: switch .

    $default  reduce using rule 39 (statement)


State 82

   36 statement: label .

    $default  reduce using rule 36 (statement)


State 83

   75 base: STRING .

    $default  reduce using rule 75 (base)


State 84

   73 base: NUM .

    $default  reduce using rule 73 (base)


State 85

   74 base: FNUM .

    $default  reduce using rule 74 (base)


State 86

   72 base: IDENTIFIER .

    $default  reduce using rule 72 (base)


State 87

   62 unary_exp: UNOP . exp

    STRING      shift, and go to state 83
    NUM         shift, and go to state 84
    FNUM        shift, and go to state 85
    IDENTIFIER  shift, and go to state 86
    '('         shift, and go to state 112

    exp   go to state 113
    base  go to state 100


State 88

   66 unary_op: '+' .

    $default  reduce using rule 66 (unary_op)


State 89

   65 unary_op: '-' .

    $default  reduce using rule 65 (unary_op)


State 90

   60 cast_exp: '(' . type ')' cast_exp
   76 base: '(' . rel_exp ')'

    CHAR        shift, and go to state 1
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 83
    NUM         shift, and go to state 84
    FNUM        shift, and go to state 85
    INT         shift, and go to state 5
    IDENTIFIER  shift, and go to state 86
    VOID        shift, and go to state 8
    UNOP        shift, and go to state 87
    '+'         shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '&'         shift, and go to state 91
    '!'         shift, and go to state 92

    type            go to state 114
    rel_exp         go to state 115
    add_expression  go to state 94
    mul_expression  go to state 95
    cast_exp        go to state 96
    unary_exp       go to state 97
    unary_op        go to state 98
    exp             go to state 99
    base            go to state 100


State 91

   67 unary_op: '&' .

    $default  reduce using rule 67 (unary_op)


State 92

   68 unary_op: '!' .

    $default  reduce using rule 68 (unary_op)


State 93

   49 label: CASE rel_exp . ':'
   51 rel_exp: rel_exp . RELOP add_expression

    RELOP  shift, and go to state 116
    ':'    shift, and go to state 117


State 94

   52 rel_exp: add_expression .
   53 add_expression: add_expression . '+' mul_expression
   54               | add_expression . '-' mul_expression

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    $default  reduce using rule 52 (rel_exp)


State 95

   55 add_expression: mul_expression .
   56 mul_expression: mul_expression . '*' cast_exp
   57               | mul_expression . '/' cast_exp

    '*'  shift, and go to state 120
    '/'  shift, and go to state 121

    $default  reduce using rule 55 (add_expression)


State 96

   58 mul_expression: cast_exp .

    $default  reduce using rule 58 (mul_expression)


State 97

   59 cast_exp: unary_exp .

    $default  reduce using rule 59 (cast_exp)


State 98

   64 unary_exp: unary_op . exp

    STRING      shift, and go to state 83
    NUM         shift, and go to state 84
    FNUM        shift, and go to state 85
    IDENTIFIER  shift, and go to state 86
    '('         shift, and go to state 112

    exp   go to state 122
    base  go to state 100


State 99

   61 unary_exp: exp .
   63          | exp . UNOP
   70 exp: exp . '(' ')'
   71    | exp . '(' id_list ')'

    UNOP  shift, and go to state 123
    '('   shift, and go to state 124

    $default  reduce using rule 61 (unary_exp)


State 100

   69 exp: base .

    $default  reduce using rule 69 (exp)


State 101

   41 statement: BREAK ';' .

    $default  reduce using rule 41 (statement)


State 102

   50 label: DEFAULT ':' .

    $default  reduce using rule 50 (label)


State 103

   45 assignment: IDENTIFIER '=' . rel_exp ';'

    STRING      shift, and go to state 83
    NUM         shift, and go to state 84
    FNUM        shift, and go to state 85
    IDENTIFIER  shift, and go to state 86
    UNOP        shift, and go to state 87
    '+'         shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '&'         shift, and go to state 91
    '!'         shift, and go to state 92

    rel_exp         go to state 125
    add_expression  go to state 94
    mul_expression  go to state 95
    cast_exp        go to state 96
    unary_exp       go to state 97
    unary_op        go to state 98
    exp             go to state 99
    base            go to state 100


State 104

   40 statement: RETURN rel_exp . ';'
   51 rel_exp: rel_exp . RELOP add_expression

    RELOP  shift, and go to state 116
    ';'    shift, and go to state 126


State 105

   48 switch: SWITCH '(' . rel_exp ')' '{' compoundst '}'

    STRING      shift, and go to state 83
    NUM         shift, and go to state 84
    FNUM        shift, and go to state 85
    IDENTIFIER  shift, and go to state 86
    UNOP        shift, and go to state 87
    '+'         shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '&'         shift, and go to state 91
    '!'         shift, and go to state 92

    rel_exp         go to state 127
    add_expression  go to state 94
    mul_expression  go to state 95
    cast_exp        go to state 96
    unary_exp       go to state 97
    unary_op        go to state 98
    exp             go to state 99
    base            go to state 100


State 106

   47 while: WHILE '(' . rel_exp ')' '{' compoundst '}'

    STRING      shift, and go to state 83
    NUM         shift, and go to state 84
    FNUM        shift, and go to state 85
    IDENTIFIER  shift, and go to state 86
    UNOP        shift, and go to state 87
    '+'         shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '&'         shift, and go to state 91
    '!'         shift, and go to state 92

    rel_exp         go to state 128
    add_expression  go to state 94
    mul_expression  go to state 95
    cast_exp        go to state 96
    unary_exp       go to state 97
    unary_op        go to state 98
    exp             go to state 99
    base            go to state 100


State 107

   24 methodbody: method methodbody .

    $default  reduce using rule 24 (methodbody)


State 108

   18 method: modifiers type IDENTIFIER '(' arglist ')' '{' methodbody '}' .

    $default  reduce using rule 18 (method)


State 109

   43 id_list: IDENTIFIER . ',' id_list
   44        | IDENTIFIER .
   46 assignment: type IDENTIFIER . '=' rel_exp ';'

    '='  shift, and go to state 129
    ','  shift, and go to state 33

    $default  reduce using rule 44 (id_list)


State 110

   25 methodbody: compoundst methodbody .

    $default  reduce using rule 25 (methodbody)


State 111

   33 statement_list: statement statement_list .

    $default  reduce using rule 33 (statement_list)


State 112

   76 base: '(' . rel_exp ')'

    STRING      shift, and go to state 83
    NUM         shift, and go to state 84
    FNUM        shift, and go to state 85
    IDENTIFIER  shift, and go to state 86
    UNOP        shift, and go to state 87
    '+'         shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '&'         shift, and go to state 91
    '!'         shift, and go to state 92

    rel_exp         go to state 115
    add_expression  go to state 94
    mul_expression  go to state 95
    cast_exp        go to state 96
    unary_exp       go to state 97
    unary_op        go to state 98
    exp             go to state 99
    base            go to state 100


State 113

   62 unary_exp: UNOP exp .
   70 exp: exp . '(' ')'
   71    | exp . '(' id_list ')'

    '('  shift, and go to state 124

    $default  reduce using rule 62 (unary_exp)


State 114

   60 cast_exp: '(' type . ')' cast_exp

    ')'  shift, and go to state 130


State 115

   51 rel_exp: rel_exp . RELOP add_expression
   76 base: '(' rel_exp . ')'

    RELOP  shift, and go to state 116
    ')'    shift, and go to state 131


State 116

   51 rel_exp: rel_exp RELOP . add_expression

    STRING      shift, and go to state 83
    NUM         shift, and go to state 84
    FNUM        shift, and go to state 85
    IDENTIFIER  shift, and go to state 86
    UNOP        shift, and go to state 87
    '+'         shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '&'         shift, and go to state 91
    '!'         shift, and go to state 92

    add_expression  go to state 132
    mul_expression  go to state 95
    cast_exp        go to state 96
    unary_exp       go to state 97
    unary_op        go to state 98
    exp             go to state 99
    base            go to state 100


State 117

   49 label: CASE rel_exp ':' .

    $default  reduce using rule 49 (label)


State 118

   53 add_expression: add_expression '+' . mul_expression

    STRING      shift, and go to state 83
    NUM         shift, and go to state 84
    FNUM        shift, and go to state 85
    IDENTIFIER  shift, and go to state 86
    UNOP        shift, and go to state 87
    '+'         shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '&'         shift, and go to state 91
    '!'         shift, and go to state 92

    mul_expression  go to state 133
    cast_exp        go to state 96
    unary_exp       go to state 97
    unary_op        go to state 98
    exp             go to state 99
    base            go to state 100


State 119

   54 add_expression: add_expression '-' . mul_expression

    STRING      shift, and go to state 83
    NUM         shift, and go to state 84
    FNUM        shift, and go to state 85
    IDENTIFIER  shift, and go to state 86
    UNOP        shift, and go to state 87
    '+'         shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '&'         shift, and go to state 91
    '!'         shift, and go to state 92

    mul_expression  go to state 134
    cast_exp        go to state 96
    unary_exp       go to state 97
    unary_op        go to state 98
    exp             go to state 99
    base            go to state 100


State 120

   56 mul_expression: mul_expression '*' . cast_exp

    STRING      shift, and go to state 83
    NUM         shift, and go to state 84
    FNUM        shift, and go to state 85
    IDENTIFIER  shift, and go to state 86
    UNOP        shift, and go to state 87
    '+'         shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '&'         shift, and go to state 91
    '!'         shift, and go to state 92

    cast_exp   go to state 135
    unary_exp  go to state 97
    unary_op   go to state 98
    exp        go to state 99
    base       go to state 100


State 121

   57 mul_expression: mul_expression '/' . cast_exp

    STRING      shift, and go to state 83
    NUM         shift, and go to state 84
    FNUM        shift, and go to state 85
    IDENTIFIER  shift, and go to state 86
    UNOP        shift, and go to state 87
    '+'         shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '&'         shift, and go to state 91
    '!'         shift, and go to state 92

    cast_exp   go to state 136
    unary_exp  go to state 97
    unary_op   go to state 98
    exp        go to state 99
    base       go to state 100


State 122

   64 unary_exp: unary_op exp .
   70 exp: exp . '(' ')'
   71    | exp . '(' id_list ')'

    '('  shift, and go to state 124

    $default  reduce using rule 64 (unary_exp)


State 123

   63 unary_exp: exp UNOP .

    $default  reduce using rule 63 (unary_exp)


State 124

   70 exp: exp '(' . ')'
   71    | exp '(' . id_list ')'

    IDENTIFIER  shift, and go to state 26
    ')'         shift, and go to state 137

    id_list  go to state 138


State 125

   45 assignment: IDENTIFIER '=' rel_exp . ';'
   51 rel_exp: rel_exp . RELOP add_expression

    RELOP  shift, and go to state 116
    ';'    shift, and go to state 139


State 126

   40 statement: RETURN rel_exp ';' .

    $default  reduce using rule 40 (statement)


State 127

   48 switch: SWITCH '(' rel_exp . ')' '{' compoundst '}'
   51 rel_exp: rel_exp . RELOP add_expression

    RELOP  shift, and go to state 116
    ')'    shift, and go to state 140


State 128

   47 while: WHILE '(' rel_exp . ')' '{' compoundst '}'
   51 rel_exp: rel_exp . RELOP add_expression

    RELOP  shift, and go to state 116
    ')'    shift, and go to state 141


State 129

   46 assignment: type IDENTIFIER '=' . rel_exp ';'

    STRING      shift, and go to state 83
    NUM         shift, and go to state 84
    FNUM        shift, and go to state 85
    IDENTIFIER  shift, and go to state 86
    UNOP        shift, and go to state 87
    '+'         shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '&'         shift, and go to state 91
    '!'         shift, and go to state 92

    rel_exp         go to state 142
    add_expression  go to state 94
    mul_expression  go to state 95
    cast_exp        go to state 96
    unary_exp       go to state 97
    unary_op        go to state 98
    exp             go to state 99
    base            go to state 100


State 130

   60 cast_exp: '(' type ')' . cast_exp

    STRING      shift, and go to state 83
    NUM         shift, and go to state 84
    FNUM        shift, and go to state 85
    IDENTIFIER  shift, and go to state 86
    UNOP        shift, and go to state 87
    '+'         shift, and go to state 88
    '-'         shift, and go to state 89
    '('         shift, and go to state 90
    '&'         shift, and go to state 91
    '!'         shift, and go to state 92

    cast_exp   go to state 143
    unary_exp  go to state 97
    unary_op   go to state 98
    exp        go to state 99
    base       go to state 100


State 131

   76 base: '(' rel_exp ')' .

    $default  reduce using rule 76 (base)


State 132

   51 rel_exp: rel_exp RELOP add_expression .
   53 add_expression: add_expression . '+' mul_expression
   54               | add_expression . '-' mul_expression

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    $default  reduce using rule 51 (rel_exp)


State 133

   53 add_expression: add_expression '+' mul_expression .
   56 mul_expression: mul_expression . '*' cast_exp
   57               | mul_expression . '/' cast_exp

    '*'  shift, and go to state 120
    '/'  shift, and go to state 121

    $default  reduce using rule 53 (add_expression)


State 134

   54 add_expression: add_expression '-' mul_expression .
   56 mul_expression: mul_expression . '*' cast_exp
   57               | mul_expression . '/' cast_exp

    '*'  shift, and go to state 120
    '/'  shift, and go to state 121

    $default  reduce using rule 54 (add_expression)


State 135

   56 mul_expression: mul_expression '*' cast_exp .

    $default  reduce using rule 56 (mul_expression)


State 136

   57 mul_expression: mul_expression '/' cast_exp .

    $default  reduce using rule 57 (mul_expression)


State 137

   70 exp: exp '(' ')' .

    $default  reduce using rule 70 (exp)


State 138

   71 exp: exp '(' id_list . ')'

    ')'  shift, and go to state 144


State 139

   45 assignment: IDENTIFIER '=' rel_exp ';' .

    $default  reduce using rule 45 (assignment)


State 140

   48 switch: SWITCH '(' rel_exp ')' . '{' compoundst '}'

    '{'  shift, and go to state 145


State 141

   47 while: WHILE '(' rel_exp ')' . '{' compoundst '}'

    '{'  shift, and go to state 146


State 142

   46 assignment: type IDENTIFIER '=' rel_exp . ';'
   51 rel_exp: rel_exp . RELOP add_expression

    RELOP  shift, and go to state 116
    ';'    shift, and go to state 147


State 143

   60 cast_exp: '(' type ')' cast_exp .

    $default  reduce using rule 60 (cast_exp)


State 144

   71 exp: exp '(' id_list ')' .

    $default  reduce using rule 71 (exp)


State 145

   48 switch: SWITCH '(' rel_exp ')' '{' . compoundst '}'

    CASE        shift, and go to state 65
    CHAR        shift, and go to state 1
    BREAK       shift, and go to state 66
    DEFAULT     shift, and go to state 67
    FLOAT       shift, and go to state 3
    INT         shift, and go to state 5
    IDENTIFIER  shift, and go to state 68
    RETURN      shift, and go to state 69
    SWITCH      shift, and go to state 70
    VOID        shift, and go to state 8
    WHILE       shift, and go to state 71

    $default  reduce using rule 34 (statement_list)

    type            go to state 74
    compoundst      go to state 148
    statement_list  go to state 76
    statement       go to state 77
    declaration     go to state 78
    assignment      go to state 79
    while           go to state 80
    switch          go to state 81
    label           go to state 82


State 146

   47 while: WHILE '(' rel_exp ')' '{' . compoundst '}'

    CASE        shift, and go to state 65
    CHAR        shift, and go to state 1
    BREAK       shift, and go to state 66
    DEFAULT     shift, and go to state 67
    FLOAT       shift, and go to state 3
    INT         shift, and go to state 5
    IDENTIFIER  shift, and go to state 68
    RETURN      shift, and go to state 69
    SWITCH      shift, and go to state 70
    VOID        shift, and go to state 8
    WHILE       shift, and go to state 71

    $default  reduce using rule 34 (statement_list)

    type            go to state 74
    compoundst      go to state 149
    statement_list  go to state 76
    statement       go to state 77
    declaration     go to state 78
    assignment      go to state 79
    while           go to state 80
    switch          go to state 81
    label           go to state 82


State 147

   46 assignment: type IDENTIFIER '=' rel_exp ';' .

    $default  reduce using rule 46 (assignment)


State 148

   48 switch: SWITCH '(' rel_exp ')' '{' compoundst . '}'

    '}'  shift, and go to state 150


State 149

   47 while: WHILE '(' rel_exp ')' '{' compoundst . '}'

    '}'  shift, and go to state 151


State 150

   48 switch: SWITCH '(' rel_exp ')' '{' compoundst '}' .

    $default  reduce using rule 48 (switch)


State 151

   47 while: WHILE '(' rel_exp ')' '{' compoundst '}' .

    $default  reduce using rule 47 (while)
